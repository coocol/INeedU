package com.eethan.ineedu.secondaryactivity;

import java.io.File;
import java.util.HashMap;
import java.util.Map;

import org.apache.http.NameValuePair;
import org.apache.http.message.BasicNameValuePair;

import com.eethan.ineedu.CommonUse.SPHelper;
import com.eethan.ineedu.constant.Constant;
import com.eethan.ineedu.constant.URLConstant;
import com.eethan.ineedu.databasebeans.User;
import com.eethan.ineedu.databasebeans.UserDetailInfo;
import com.eethan.ineedu.databasebeans.UserInfo;
import com.eethan.ineedu.jackson.JacksonUtil;
import com.eethan.ineedu.jackson.RegisterJsonObject;
import com.eethan.ineedu.mycontrol.MyToast;
import com.eethan.ineedu.network.CustomerHttpClient;
import com.eethan.ineedu.network.PostException;
import com.eethan.ineedu.network.ServerCommunication;
import com.eethan.ineedu.network.SocketHttpRequester;
import com.eethan.ineedu.primaryactivity.BaseActivity;
import com.eethan.ineedu.primaryactivity.MyInformationActivity;
import com.eethan.ineedu.primaryactivity.R;
import com.eethan.ineedu.util.BitmapSaver;
import com.eethan.ineedu.util.FormFile;
import com.eethan.ineedu.util.UploadHelper;
import com.nostra13.universalimageloader.core.DisplayImageOptions;
import com.nostra13.universalimageloader.core.ImageLoader;
import com.nostra13.universalimageloader.core.assist.ImageScaleType;

import android.app.Activity;
import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.PorterDuffXfermode;
import android.graphics.Rect;
import android.graphics.RectF;
import android.graphics.Bitmap.Config;
import android.graphics.PorterDuff.Mode;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;

public class EditMyInformationActivity extends BaseActivity implements OnClickListener{
	ImageButton headPic;
	ImageButton pageBack;
	TextView nickname;
	TextView password;
	TextView tele;
	TextView email;
	TextView signature;
	TextView school;
	TextView major;	
	
	RelativeLayout head;
	RelativeLayout nick;
	RelativeLayout psd;
	RelativeLayout sig;
	RelativeLayout uni;
	RelativeLayout gra;
	
	ImageView faceImage;
	File file;
	private static final int IMAGE_REQUEST_CODE = 0;
	private static final int RESULT_REQUEST_CODE = 2;
	private static final String TAG = "UploadActivity";
	private int id;
	
	protected ImageLoader imageLoader = ImageLoader.getInstance();
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setPageName("EditMyinfomationActivity");
		setContentView(R.layout.update_information_page);
		

		findView();
		
		
		
		
	    Intent intent = getIntent();
		id=intent.getIntExtra("id",-1);
		obtainHead();
		new GetDataTask().execute();
		
	
		/*nickname.setText(intent.getStringExtra("nickname"));
		password.setText(intent.getStringExtra("password"));
		tele.setText(intent.getStringExtra("tele"));
		email.setText(intent.getStringExtra("email"));
		signature.setText(intent.getStringExtra("signature"));
		school.setText(intent.getStringExtra("school"));
		major.setText(intent.getStringExtra("academy")+","+intent.getStringExtra("grade"));*/
		
		pageBack.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				EditMyInformationActivity.this.finish();
			}
		});
		/**
		 *  在这里写修改头像的方法入口
		 * 
		 */
		headPic.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				Intent intentFromGallery = new Intent();
				intentFromGallery.setType("image/*"); // 设置文件类型
				intentFromGallery
						.setAction(Intent.ACTION_GET_CONTENT);
				startActivityForResult(intentFromGallery,
						IMAGE_REQUEST_CODE);
			}
		});
		
		nickname.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				Intent intent=new Intent(getApplicationContext(), EditNickNameActivity.class);
				intent.putExtra("id",id);
				startActivity(intent);
			}
		});
		password.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				Intent intent=new Intent(getApplicationContext(), EditPasswordActivity.class);
				intent.putExtra("id",id);
				startActivity(intent);
			}
		});
		
		tele.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				MyToast.showToast(EditMyInformationActivity.this, "电话和邮箱暂时不能更改~");
			}
		});
		
		email.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				MyToast.showToast(EditMyInformationActivity.this, "电话和邮箱暂时不能更改~");
			}
		});
		
		signature.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				Intent intent=new Intent(getApplicationContext(), EditSignatureActivity.class);
				intent.putExtra("id",id);
				startActivity(intent);
			}
		});
		
		school.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				Intent intent=new Intent(getApplicationContext(), EditUniversityActivity.class);
				intent.putExtra("id",id);
				startActivity(intent);
			}
		});
		
		major.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				Intent intent=new Intent(getApplicationContext(), EditAcademyActivity.class);
				intent.putExtra("id",id);
				startActivity(intent);
			}
		});
		
		
	}

	private void findView() {
		// TODO Auto-generated method stub
		pageBack=(ImageButton)findViewById(R.id.register_page_back_button);
		headPic=(ImageButton)findViewById(R.id.home_page_user_headpic_button);
		
		nickname=(TextView)findViewById(R.id.edit_nickname);
		password=(TextView)findViewById(R.id.edit_password);
		tele=(TextView)findViewById(R.id.edit_tele);
		email=(TextView)findViewById(R.id.edit_email);
		signature=(TextView)findViewById(R.id.edit_signature);
		school=(TextView)findViewById(R.id.edit_school);
		major=(TextView)findViewById(R.id.edit_major);	
		
		head=(RelativeLayout)findViewById(R.id.re_layout_head);
		nick=(RelativeLayout)findViewById(R.id.re_layout_nick);
		psd=(RelativeLayout)findViewById(R.id.re_layout_psd);
		sig=(RelativeLayout)findViewById(R.id.re_layout_sig);
		uni=(RelativeLayout)findViewById(R.id.re_layout_uni);
		gra=(RelativeLayout)findViewById(R.id.re_layout_gra);
		
		head.setOnClickListener(this);
		nick.setOnClickListener(this);
		psd.setOnClickListener(this);
		sig.setOnClickListener(this);
		uni.setOnClickListener(this);
		gra.setOnClickListener(this);
		
	}

	private class GetDataTask extends AsyncTask<Void, Void, Object> {

		//后台线程操作
		@Override
		protected Object doInBackground(Void... params) {
			//后台获取数据
			
			SharedPreferences lightDB = getSharedPreferences(Constant.INEEDUSPR,0);
			
    		int id=lightDB.getInt(Constant.ID,-1);
    		
    		if(id==-1){
    			EditMyInformationActivity.this.finish();
    		}
			
    		
			String response;
			try {
				response = ServerCommunication.request(id, URLConstant.GET_USER_DETAIL_INFO_URL);
			} catch (PostException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				return e.getMessage();
			}
			
			
			RegisterJsonObject AllMyInfo = JacksonUtil.json().fromJsonToObject(response,RegisterJsonObject.class);
			
			return AllMyInfo;
		}

		@Override
		protected void onPostExecute(Object result) {
			if(!ServerCommunication.checkResult(getContext(), result))
			{
				MyToast.showToast(getContext(), (String)result);
				loadingDialogDismiss();
				super.onPostExecute(result);
				return;
			}
			RegisterJsonObject myDatilInfoJsonObject=(RegisterJsonObject)result;
			User me=myDatilInfoJsonObject.getUser();
			UserInfo myInfo=myDatilInfoJsonObject.getUserInfo();
			UserDetailInfo myDetailInfo=myDatilInfoJsonObject.getUserDetailInfo();
//			UserLocation myLocation=myDatilInfoJsonObject.getUserLocation();
			
			final int myid=me.getId();
			final String mytele = me.getTele();
			final String mypassword = me.getPassword();
			final String myemail = me.getEmail();
			
			final String mynickName = myInfo.getNickName();
			final String myrealName = myInfo.getRealName();
			final String mysex = myInfo.getSex();
			final int myloveNum=myInfo.getLoveNum();
			final int mypopularityNum=myInfo.getPopularityNum();
			
			final String mysignature;
			final String myschool;
			final String myacademy;
			final String mygrade;
			if(myDetailInfo.getSignature()==null){
				mysignature="未填写";
			}else if(myDetailInfo.getSignature().equals("")){
				mysignature=myDetailInfo.getSignature();//maybe it is null
			}
			else{
				mysignature=myDetailInfo.getSignature();//maybe it is null
			}
			if(myDetailInfo.getSchool().equals("")){
				myschool="未填写";
			}else{
				myschool=myDetailInfo.getSchool();
			}
			if(myDetailInfo.getAcademy().equals("")){
				myacademy="未填写";
			}else{
				myacademy=myDetailInfo.getAcademy();
			}
			if(myDetailInfo.getGrade().equals("")){
				mygrade="未填写";
			}else{
				mygrade=myDetailInfo.getGrade();
			}
			
			nickname.setText(mynickName);
			password.setText(mypassword);
			tele.setText(mytele);
			signature.setText(mysignature);
			school.setText(myschool);
			major.setText(myacademy+","+mygrade);
			email.setText(myemail);

			super.onPostExecute(result);
		}
	}
	
	/**
	 * obtain locate face image
	 */
	protected void obtainHead(){
		
		imageLoader.displayImage(URLConstant.BIG_HEAD_PIC_URL+new SPHelper(getContext()).GetUserId()+".png",headPic, getHeadDisplayOption());
	}
	/**
	 * onActvityResult method
	 */
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		//结果码不等于取消时候
		if (resultCode != RESULT_CANCELED) {

			switch (requestCode) {
			case IMAGE_REQUEST_CODE:
				startPhotoZoom(data.getData());
				break;
			case RESULT_REQUEST_CODE:
				if (data != null) {
					try {
						getImageToView(data);
					} catch (Exception e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				break;
			}
		}
		super.onActivityResult(requestCode, resultCode, data);
	}
	/**
	 * 裁剪图片方法实现
	 * 
	 * @param uri
	 */
	public void startPhotoZoom(Uri uri) {

		Intent intent = new Intent("com.android.camera.action.CROP");
		intent.setDataAndType(uri, "image/*");
		// 设置裁剪
		intent.putExtra("crop", "true");
		// aspectX aspectY 是宽高的比例
		intent.putExtra("aspectX", 1);
		intent.putExtra("aspectY", 1);
		// outputX outputY 是裁剪图片宽高
		intent.putExtra("outputX", 320);
		intent.putExtra("outputY", 320);
		intent.putExtra("return-data", true);
		startActivityForResult(intent, 2);
	}
	
	 /**
		 * 保存裁剪之后的图片数据为文件并上传、更改
		 * 
		 * @param picdata
		 * @throws Exception 
		 */
	private void getImageToView(Intent data) throws Exception {
		Bundle extras = data.getExtras();
		if (extras != null) {
			Intent intent = getIntent();
			final int id=intent.getIntExtra("id",-1);
			Bitmap photo = extras.getParcelable("data");
			
			String bigHeadName="big_"+id+".png";
			Drawable bigHead = new BitmapDrawable(photo);
			BitmapSaver.saveImage(photo, bigHeadName);
			file=new File("sdcard/DCIM/"+bigHeadName);
			new UploadHelper(new SPHelper(EditMyInformationActivity.this).GetUserId())
			.uploadBigHead(file);//上传大头像
			
		}
	}

	
	@Override
	protected void onRestart(){
		super.onRestart();
		obtainHead();
		new GetDataTask().execute();
		
		
	}

	@Override
	public void onClick(View v) {
		// TODO Auto-generated method stub
		Intent intent;
		switch (v.getId()) {
		case R.id.re_layout_head:
			Intent intentFromGallery = new Intent();
			intentFromGallery.setType("image/*"); // 设置文件类型
			intentFromGallery
					.setAction(Intent.ACTION_GET_CONTENT);
			startActivityForResult(intentFromGallery,
					IMAGE_REQUEST_CODE);
					break;
		case R.id.re_layout_nick:
			 intent=new Intent(getApplicationContext(), EditNickNameActivity.class);
			intent.putExtra("id",id);
			startActivity(intent);
			break;
		case R.id.re_layout_psd:
			 intent=new Intent(getApplicationContext(), EditPasswordActivity.class);
			intent.putExtra("id",id);
			startActivity(intent);
			break;
		case R.id.re_layout_sig:
			 intent=new Intent(getApplicationContext(), EditSignatureActivity.class);
			intent.putExtra("id",id);
			startActivity(intent);
			break;
		case R.id.re_layout_uni:
			 intent=new Intent(getApplicationContext(), EditUniversityActivity.class);
			intent.putExtra("id",id);
			startActivity(intent);
			break;
		case R.id.re_layout_gra:
			 intent=new Intent(getApplicationContext(), EditAcademyActivity.class);
			intent.putExtra("id",id);
			startActivity(intent);
			break;

		default:
			break;
		}
	}
	
}
